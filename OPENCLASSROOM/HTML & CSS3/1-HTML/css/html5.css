h1, h2 {
    text-align: center;
}

h3 {
    text-align: left;
}

em {
    font-style: oblique;
}

hr {
    clear: both;
}


header {
    height: 50px;
    background-color: rgba(49, 49, 49, 0.651);
    text-align: center;
}

header a {
    display: inline;
    text-decoration: none;
    color: white;
    font-size: 1.2em;
    margin: 15px;
    padding-top: 5px;
}

nav {
    height: 50px;
    background-color: rgba(49, 49, 49, 0.651);
    text-align: center;
}

nav a {
    text-decoration: none;
    margin-left: 20px;
}

section {
    width: 90%;
    margin-left: 65px;
}

section article {
    text-align: justify;
    float: right;
    width: 60%;
}

section img {
    float: left;
    width: 30%;
    padding: 50px;
    margin-left: 10px;
}

p.centerblocs {
width: 350px; /* On a indiqué une largeur (obligatoire) */ 
margin: auto; /* On peut donc demander à ce que le bloc soit centré avec auto */
border: 1px solid black; 
text-align: justify; 
padding: 12px; 
margin-bottom: 20px;
}

p.example-1 {
    width: 250px;
    height: 110px;
    margin: auto; 
    text-align: justify; 
    border: 1px solid black;
}

p.example-2 {
    width: 250px;
    height: 110px;
    margin: auto; 
    text-align: justify; 
    border: 1px solid black;
    overflow: hidden;
}

p.example-3 {
    width: 250px;
    height: 110px;
    margin: auto; 
    text-align: justify; 
    border: 1px solid black;
    overflow: auto;
}

p.example-4 {
    width: 250px;
    height: 110px;
    margin: auto; 
    text-align: justify; 
    border: 1px solid black;
}

p.example-5 {
    width: 250px;
    height: 110px;
    margin: auto; 
    text-align: justify; 
    border: 1px solid black;
    word-wrap: break-word;
}



footer {
    height: 50px;
    background-color: rgba(49, 49, 49, 0.651);
    text-align: center;
}

footer p {
    display: inline;
    text-decoration: none;
    color: white;
    font-size: 1.2em;
    margin: 15px;
    padding-top: 5px;
}

table {
    border-collapse: collapse;
}

td, th {
    border: 1px solid black;
}

/* On dispose de pseudo-formats en CSS pour changer le style des éléments requis (:required) 
et invalides (:invalid). N'oubliez pas non plus que vous disposez du pseudo-format :focus pour changer 
l'apparence d'un champ lorsque le curseur se trouve à l'intérieur. */
input:required {
    background-color: red;
}